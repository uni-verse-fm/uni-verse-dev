services:
  api:
    build:
      context: ./uni-verse-api/
      dockerfile: Dockerfile.dev
    #     command: npm run start:dev
    ports:
      - 3000:3005
      - 3001:9229
    depends_on:
      - mongodb
      - minio
      - rabbitmq
    volumes:
      - ./uni-verse-api:/usr/src/app
      - ./api-logs:/usr/src/app/logs
    restart: unless-stopped
    env_file:
      - docker.env

  #  frontend:
  #  build:
  #    context: ./uni-verse-frontend/
  #    dockerfile: ./Dockerfile.dev
  #  command: npm run dev
  #ports:
  #  - 3005:3005
  #depends_on:
  #   - mongodb
  #  - minio
  # - rabbitmq
  # - api
  #volumes:
  #   - ./uni-verse-frontend:/usr/src/app
  # - /usr/src/app/node_modules
  # - ./froentend-logs:/usr/src/app/logs
  #restart: unless-stopped
  # env_file:
  #  - docker.env

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    volumes:
      - mongodb-data:/data/db
    ports:
      - 27017:27017
    env_file:
      - docker.env

  mongo-express:
    image: mongo-express
    container_name: server-mongo-express
    depends_on:
      - mongodb
    ports:
      - "8086:3005"
    restart: always
    env_file:
      - docker.env

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio-data:/data
    command: minio server --console-address ":9001" /data
    restart: always
    env_file:
      - docker.env

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: "rabbitmq"
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-log:/var/log/rabbitmq

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    privileged: true
    environment:
      - discovery.type=single-node
      - node.name=es01
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=false
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    depends_on:
      - api
    env_file:
      - docker.env

  # search-worker:
  #    container_name: uni_verse_search_worker
  #    image: registry.qtmsheep.com/vagahbond/uni-verse/worker:latest
  #   volumes:
  #      - ../uni-verse-worker:/usr/src/app
  #   - olaf-data:/root/.olaf/db
  # restart: unless-stopped
  #   environment:
  #     - TASK=search
  #    env_file:
  #      - docker.env

  #  register-worker:
  #   container_name: uni_verse_register_worker
  #   image: registry.qtmsheep.com/vagahbond/uni-verse/worker:latest
  #  volumes:
  #    - ../uni-verse-worker:/usr/src/app
  #   - olaf-data:/root/.olaf/db

  #  restart: unless-stopped
  #  environment:
  #    - TASK=register
  #  env_file:
  #    - docker.env

volumes:
  mongodb-data:
  minio-data:
  grafana-storage:
  log-data:
  elasticsearch-data:
  rabbitmq-data:
  rabbitmq-log:
  olaf-data:
